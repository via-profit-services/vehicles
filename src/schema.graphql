extend type Query {
  vehicles: VehiclesQuery!
}

type VehicleBrand implements Node {
  id: ID!
  name: String!
  models: [VehicleModel!]!
}

type VehicleModel implements Node {
  id: ID!
  name: String!
  brand: VehicleBrand!
}

type VehiclesQuery {
  """
  Returns VehicleBrands list bundle
  """
  brands(
    first: Int
    offset: Int
    after: String
    orderBy: [VehicleBrandOrderBy!]
    filter: VehicleBrandListFilter
    search: [VehicleBrandFilterSearch!]
  ): VehiclesBrandsListConnection!

  """
  Returns VehicleModels list bundle
  """
  models(
    first: Int
    offset: Int
    after: String
    orderBy: [VehicleModelOrderBy!]
    filter: VehicleModelListFilter
    search: [VehicleModelFilterSearch!]
  ): VehiclesModelsListConnection!
  """
  Returns vehicle brand if exists
  """
  brand(id: ID!): VehicleBrand

  """
  Returns vehicle model if exists
  """
  model(id: ID!): VehicleModel
}

input VehicleBrandInputCreate {
  id: String!
  name: String!
}

input VehicleModelInputCreate {
  id: String!
  name: String!
  brand: String!
}

input VehicleBrandInputUpdate {
  id: String
  name: String
}

input VehicleModelInputUpdate {
  id: String
  name: String
  brand: String
}


"""
VehicleBrand edge bundle
"""
type VehicleBrandEdge implements Edge {
  node: VehicleBrand!
  cursor: String!
}

"""
VehicleModels edge bundle
"""
type VehicleModelEdge implements Edge {
  node: VehicleModel!
  cursor: String!
}


"""
Possible data to filter list of vehiicle brands
"""
input VehicleBrandListFilter {
  id: [ID!]
}

"""
Possible data to filter list of vehiicle models
"""
input VehicleModelListFilter {
  id: [ID!]
  brand: [String!]
}

"""
Vehicle brand search filter
"""
input VehicleBrandFilterSearch {
  field: VehicleBrandFilterSearchField!

  """
  Search query string
  """
  query: String!
}

"""
Vehicle model search filter
"""
input VehicleModelFilterSearch {
  field: VehicleModelFilterSearchField!

  """
  Search query string
  """
  query: String!
}

"""
Possible fields to search brands
"""
enum VehicleBrandFilterSearchField {
  name
}

"""
Possible fields to search models
"""
enum VehicleModelFilterSearchField {
  name
}

"""
Ordering options for brands returned from the connection
"""
input VehicleBrandOrderBy {
  field: VehicleBrandOrderField!
  direction: OrderDirection!
}

"""
Ordering options for models returned from the connection
"""
input VehicleModelOrderBy {
  field: VehicleModelOrderField!
  direction: OrderDirection!
}

enum VehicleBrandOrderField {
  name
}

enum VehicleModelOrderField {
  brand
  name
}

"""
Vehicle brands list bundle
"""
type VehiclesBrandsListConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [VehicleBrandEdge!]!
}

"""
Vehicle models list bundle
"""
type VehiclesModelsListConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [VehicleModelEdge!]!
}
